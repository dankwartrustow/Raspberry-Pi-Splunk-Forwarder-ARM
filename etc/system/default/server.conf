#   Version 6.0
# DO NOT EDIT THIS FILE!
# Please make all changes to files in $SPLUNK_HOME/etc/system/local.
# To make changes, copy the section/stanza you want to change from $SPLUNK_HOME/etc/system/default
# into ../local and edit there.
#
# This file contains possible attributes and values to configure SSL
# and HTTP server options.
#


[general]
serverName=$HOSTNAME-$USER
sessionTimeout=1h
pass4SymmKey = changeme

# The following 'allowRemoteLogin' setting controls remote management of your splunk instance.
#  - If set to 'always', all remote logins are allowed.
#  - If set to 'never', only local logins to splunkd will be allowed. Note that this will still allow
#    remote management through splunkweb if splunkweb is on the same server.
#  - If set to 'requireSetPassword' (default behavior):
#     1. In the free license, remote login is disabled.
#     2. In the pro license, remote login is only disabled for the admin user that has not changed their default password
allowRemoteLogin=requireSetPassword

listenOnIPv6 = no
connectUsingIpVersion = auto

useHTTPServerCompression = true
useHTTPClientCompression = false

defaultHTTPServerCompressionLevel = 6
skipHTTPCompressionAcl = 127.0.0.1 ::1

[sslConfig]
enableSplunkdSSL = true
useClientSSLCompression = true
useSplunkdClientSSLCompression = true 
# enableSplunkSearchSSL has been moved to web.conf,  and changed to enableSplunkWebSSL

#By default, allow both v2 and v3 connections to the HTTP server
supportSSLV3Only = false
sendStrictTransportSecurityHeader = false
allowSslCompression = true
allowSslRenegotiation = true

# For the HTTP server, Diable ciphers lower than 128-bit and disallow ciphers that
# don't provide authentication and/or encryption.
# Use 'openssl ciphers -v' to generate a list of supported ciphers
cipherSuite = ALL:!aNULL:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM

sslKeysfile = server.pem
sslKeysfilePassword = password
caCertFile = cacert.pem
caPath = $SPLUNK_HOME/etc/auth
certCreateScript = $SPLUNK_HOME/bin/splunk, createssl, server-cert

[httpServer]

# defines the stylesheet relative URL to apply to default Atom feeds;
# set to 'none' to not write out xsl-stylesheet directive
atomFeedStylesheet = /static/atom.xsl

max-age = 3600
follow-symlinks = false
# reject web accesses over 800MB in length
max_content_length = 838860800

# When HTTP client streams data to HTTP server, server will timeout write operation after
# streamInWriteTimeout seconds if it cannot make write progress.
streamInWriteTimeout = 5

acceptFrom = *

# Automatically tune these limits:
maxThreads = 0
maxSockets = 0

forceHttp10 = auto
crossOriginSharingPolicy = 
x_frame_options_sameorigin = true
allowBasicAuth = true
basicAuthRealm = /splunk

[mimetype-extension-map]
gif = image/gif
html = text/html
htm = text/html
jpg = image/jpg
png = image/png
txt = text/plain
xml = text/xml
xsl = text/xml

[applicationsManagement]
allowInternetAccess = true
url = https://splunkbase.splunk.com/api/apps
loginUrl = https://splunkbase.splunk.com/api/account:login/
detailsUrl = https://splunkbase.splunk.com/apps/id
updateHost = https://splunkbase.splunk.com
updatePath = /api/apps:resolve/checkforupgrade
updateTimeout = 24h

# disk usage processor settings
[diskUsage]
minFreeSpace = 5000
pollingFrequency = 100000
pollingTimerFrequency = 10

[fileInput]
outputQueue = parsingQueue

# don't capture local encoding secret in troubleshooting files
[diag]
EXCLUDE-splunksecret = */etc/auth/splunk.secret

#
# default license configuration
# by default, this node is a master that has a single
# slave (itself) and a single pool based on the single
# free stack that alots 100% to itself
#

[license]
master_uri = self
# these timeouts only matter if you have a master_uri set to remote master
connection_timeout = 30
send_timeout = 30
receive_timeout = 30
squash_threshold = 2000


#
# Search head pooling configuration
#
[pooling]
state                     = disabled
storage                   =
app_update_triggers       = true
# Wait 10 seconds before giving up on acquiring file-based lock.
lock.timeout              = 10s
# Do not log to locked file.
lock.logging              = false
# Rebuild in-memory conf data structures at most once every minute.
poll.interval.rebuild     = 1m
# Check files for changes at most once every minute.
poll.interval.check       = 1m
# Ignore files that we do not typically modify at runtime. The exception is
# app.conf, which we use to detect app installation and upgrade.
poll.blacklist.cdefault   = (apps/*|users/*/*)/default(.old.*)?/(?!app.conf$)
poll.blacklist.mdefault   = (apps/*|users/*/*)/metadata/default.meta$
# Ignore users.ini, which has its own separate update checking.
poll.blacklist.users_ini  = users/users.ini$
# Ignore files that splunkd's HTTP server handles directly.
poll.blacklist.static     = (apps/*|users/*/*)/static$
# Ignore files that splunkweb handles directly.
poll.blacklist.appserver  = (apps/*|users/*/*)/appserver$
poll.blacklist.django     = (apps/*|users/*/*)/django$
poll.blacklist.appfx      = apps/framework$
poll.blacklist.locale     = (apps/*|users/*/*)/locale$
# Ignore our own lock and tmp files, as well as vim and emacs tmp files.
poll.blacklist.tmpfiles   = .(lock|tmp|swp|~)$

[queue]
maxSize = 500KB
# look back time in minutes
cntr_1_lookback_time = 60s
cntr_2_lookback_time = 600s
cntr_3_lookback_time = 900s
# sampling interval is the same for all the counters of a particular queue
# and defaults to 1 sec
sampling_interval = 1s

[queue=fschangemanager_queue]
maxSize = 5MB
cntr_1_lookback_time = 60s
cntr_2_lookback_time = 600s
cntr_3_lookback_time = 900s
# sampling frequency is the same for all the counters of a particular queue
# and defaults to 1 sec
sampling_interval = 1s

[queue=AQ]
maxSize = 10MB
# look back time in minutes
cntr_1_lookback_time = 60s
cntr_2_lookback_time = 600s
cntr_3_lookback_time = 900s
# sampling frequency is the same for all the counters of a particular queue
# and defaults to 1 sec
sampling_interval = 1s

[queue=WEVT]
maxSize = 5MB
# look back time in minutes
cntr_1_lookback_time = 60s
cntr_2_lookback_time = 600s
cntr_3_lookback_time = 900s
# sampling frequency is the same for all the counters of a particular queue
# and defaults to 1 sec
sampling_interval = 1s

[queue=aggQueue]
maxSize = 1MB
# look back time in minutes
cntr_1_lookback_time = 60s
cntr_2_lookback_time = 600s
cntr_3_lookback_time = 900s
# sampling frequency is the same for all the counters of a particular queue
# and defaults to 1 sec
sampling_interval = 1s

[queue=parsingQueue]
maxSize = 6MB
# look back time in minutes
cntr_1_lookback_time = 60s
cntr_2_lookback_time = 600s
cntr_3_lookback_time = 900s
# sampling frequency is the same for all the counters of a particular queue
# and defaults to 1 sec
sampling_interval = 1s

[queue=vixQueue]
maxSize = 8MB

[clustering]
mode = disabled
pass4SymmKey =
register_replication_address =
register_forwarder_address =
register_search_address =
executor_workers = 10

# lowlevel timeouts for intra-cluster communication
cxn_timeout = 60
send_timeout = 60
rcv_timeout = 60

# replication channel timeouts
rep_cxn_timeout = 60
rep_send_timeout = 60
rep_rcv_timeout = 60
rep_max_send_timeout = 600
rep_max_rcv_timeout = 600

# only valid for mode=master
replication_factor = 3
search_factor = 2
heartbeat_timeout = 60
restart_timeout = 60
quiet_period = 60
max_peer_build_load = 2
max_peer_rep_load = 5
searchable_targets = true
target_wait_time = 150
commit_retry_time = 300
percent_peers_to_restart = 10

#only valid for mode=master or mode=searchhead
generation_poll_interval = 5

# only needed for mode=slave or mode=searchhead
master_uri =

# only needed for mode=slave
heartbeat_period = 1
enableS2SHeartbeat = true
s2sHeartbeatTimeout = 600
max_replication_errors = 3
search_files_retry_timeout = 600
