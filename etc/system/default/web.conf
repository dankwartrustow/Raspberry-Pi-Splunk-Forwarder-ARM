#   Version 6.0
# DO NOT EDIT THIS FILE!
# Please make all changes to files in $SPLUNK_HOME/etc/system/local.
# To make changes, copy the section/stanza you want to change from $SPLUNK_HOME/etc/system/default
# into ../local and edit there.
#
# This file contains possible attributes and values you can use to configure Splunk's web interface.
#

[default]


[settings]

# enable/disable the appserver
startwebserver = 1

# port number tag is missing or 0 the server will NOT start an http listener 
# this is the port used for both SSL and non-SSL (we only have 1 port now).
httpport = 8000

# this determines whether to start SplunkWeb in http or https.
enableSplunkWebSSL = false

# location of splunkd; don't include http[s]:// in this anymore.
mgmtHostPort = 127.0.0.1:8089

# default timeout, in seconds, when communicating with splunkd
splunkdConnectionTimeout = 30

# SSL certificate files. Paths are specified relative to SPLUNK_HOME
privKeyPath = etc/auth/splunkweb/privkey.pem
caCertPath = etc/auth/splunkweb/cert.pem

# Allow only SSLv3 connections if true
# NOTE: Enabling this may cause some browsers problems
supportSSLV3Only = False

# For the HTTP server, Diable ciphers lower than 128-bit and disallow ciphers that
# don't provide authentication and/or encryption.
# Use 'openssl ciphers -v' to generate a list of supported ciphers
cipherSuite = ALL:!aNULL:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM

# external UI URIs
userRegistrationURL = https://www.splunk.com/page/sign_up
updateCheckerBaseURL = https://quickdraw.splunk.com/js/
docsCheckerBaseURL=https://quickdraw.splunk.com/help

#
# Header options
#

# setting X-FRAME-OPTIONS header to SAMEORIGIN helps to prevent "click-jacking" attacks
x_frame_options_sameorigin = True

#
# SSO Configuration
#

# Remote user HTTP header sent by the authenticating proxy server.
# This header should be set to the authenticated user.
#
remoteUser = REMOTE_USER

# SSO mode.
# Allows SSO to behave in either permissive or strict mode.
# Permissive: Users may login to splunkweb using a valid splunk account
# even if they are coming from a non trusted IP.
# Strict: All requests to splunkweb will be restricted to those originating
# from a trusted IP except those to endpoints not requiring authentication.
#
# allowed values: strict, permissive
# default: strict.
#
SSOMode = strict

# Trusted IP.  This is the IP address of the authenticating proxy.
# Splunkweb verifies it is receiving data from the proxy host for all
# SSO requests.
# Uncomment and set to a valid IP address to enable SSO.
#
# trustedIP = 127.0.0.1

#
# splunk appserver config
#

# Top level name for the site
root_endpoint = /

# path to static content
# The path here is automatically appended to root_endpoint defined above
static_endpoint = /static

# Uncomment if running behind a reverse proxy to log the X-Forwarded-For 
# address of the client rather than the address of the proxy
# tools.proxy.on = True

# The directory that actually holds the static content
# this can be an absolute url if you want to put it elsewhere
static_dir = share/splunk/search_mrsparkle/exposed

testing_endpoint = /testing
testing_dir = share/splunk/testing

# The path here is automatically appended to root_endpoint defined above
rss_endpoint = /rss

# Uncomment the next line to enable directory indexes in static directories
# tools.staticdir.generate_indexes = 1

# base path to mako templates
template_dir = share/splunk/search_mrsparkle/templates

# base path to UI module assets
module_dir = share/splunk/search_mrsparkle/modules

# Determines if webserver applies gzip compression to responses
enable_gzip = True

# Determines if the Expires header of /static files is set to a far-future date
use_future_expires = True

# Flash support, broken into three parts.
# We currently require a min baseline of Shockwave Flash 9.0 r124
flash_major_version = 9
flash_minor_version = 0
flash_revision_version = 124

# Force the use of Flash Charting when rendering simple XML dashboards and forms into view XML
# NOTE: this setting does nothing unless simple_xml_module_render is also set to True
simple_xml_force_flash_charting = False

# Setting this to False will prevent many client-side packages (such as the Splunk JavaScript SDK) from working correctly
enable_proxy_write = True

# JavaScript Logger mode
# Available modes: None, Firebug, Server
# Mode None: Does not log anything
# Mode Firebug: Use firebug by default if it exists or defer to the older less promiscuous version of firebug lite
# Mode Server: Log to a defined server endpoint
# See js/logger.js Splunk.Logger.Mode for mode implementation details and if you would like to author your own
js_logger_mode = None

# Mode SERVER
# The server endpoint to post javascript log messages
js_logger_mode_server_end_point = util/log/js
# The interval in milliseconds to check, post and cleanse the javascript log buffer
js_logger_mode_server_poll_buffer = 1000
# The maximum size threshold to post and cleanse the javascript log buffer
js_logger_mode_server_max_buffer = 100

# Specifies the length of time lapsed (in minutes) for notification when there is no user interface clicking, mouseover, scrolling or resizing.
# If less than 1, results in no timeout notification ever being triggered (Sessions will stay alive for as long as the browser is open).
ui_inactivity_timeout = 60

# Toggle js cache control
js_no_cache = False

# Toggle the insecure login endpoint
enable_insecure_login = False

# Enable/Disable Form Username and Password storage prompts and control form data from being cached in session history. 
enable_autocomplete_login = False

# Custom content for login screen
login_content = 

# Control what's left on for search decomposition
enabled_decomposers = plot

#Toggle whether the static JS files for modules are consolidated and minified
minify_js = True

#Toggle whether the static CSS files for modules are consolidated and minified
minify_css = True

# Toggle whether the JS for individual modules is wrapped in a try/catch
# If True, syntax errors in individual modules will not cause the UI to hang,
# other than when using the module in question
# Set this to False when developing apps.
trap_module_exceptions = True

# Toggle whether the JSChart module runs in Test Mode
# If True, JSChart module attaches HTML classes to chart elements for introspection
# This will negatively impact performance, so should be disabled unless actively in use.
jschart_test_mode = False

# The maximum number of views to cache in the appserver.
max_view_cache_size = 300

# Used to bypass extra call to splunkd to determine pdfgen availability
# This is set on a per-platform basis, changing this is not recommended
pdfgen_is_available = 0

#
# cherrypy HTTP server config
#

# server.thread_pool = 20
# server.thread_pool_max = -1
# server.thread_pool_min_spare = 5
# server.thread_pool_max_spare = 10

# Host values may be any IPv4 or IPv6 address, or any valid hostname.
# The string 'localhost' is a synonym for '127.0.0.1' (or '::1', if
# your hosts file prefers IPv6). The string '0.0.0.0' is a special
# IPv4 entry meaning "any active interface" (INADDR_ANY), and '::'
# is the similar IN6ADDR_ANY for IPv6. 
# Defaults to 0.0.0.0 if listenOnIPv6 is set to no, else ::
# server.socket_host = 0.0.0.0

# Set to "yes" to enable IPv6 support, or "only" accept connection
# on IPv6 only
listenOnIPv6 = no

# Default is to allow files up to 500MB to be uploaded to the server
# uncomment and change if necessary
# max_upload_size = 500

# HTTP access log filename
log.access_file = web_access.log

# Maximum file size of the access log, in bytes
log.access_maxsize = 25000000

# Maximum number of rotated log files to retain
log.access_maxfiles = 5

# Maximum file size of the web_service.log file, in bytes
log.error_maxsize = 25000000

# Maximum number of rotated log files to retain
log.error_maxfiles = 5

# Set to True to enable debug output to the console
log.screen = True

# Set this to False on production machines
request.show_tracebacks = True

# Auto reload python files; turn on while debugging
engine.autoreload_on = False

# user session configuration
# You really don't want to turn this off
tools.sessions.on = True
tools.sessions.timeout = 60

# Set to False to expire the session cookie when the browser exits
tools.sessions.restart_persist = True

# Set to False to allow the session cookie to be read by javascript
tools.sessions.httponly = True

# Set to False to allow the session cookie to be accessible to insecure pages
tools.sessions.secure = True

# Some requests such as uploading large files can take a long time
response.timeout = 7200

# Comment out the next two lines to use RAM based sessions instead
# Use an absolute path to store sessions outside of the splunk tree
tools.sessions.storage_type = file
tools.sessions.storage_path = var/run/splunk

# Decode all strings that come into Cherrpy controller methods to unicode (assumes UTF-8 encoding).
# WARNING: Disabling this will likely break the application, as all incoming strings are assumed
# to be unicode.
tools.decode.on = True

# Encodes all controller method response strings into UTF-8 str objects in Python.
# WARNING: Disabling this will likely cause high byte character encoding to fail.
tools.encode.on = True

# Force all outgoing characters to be encoded into UTF-8.
# This only works with tools.encode.on set to True.
# By setting this to utf-8, Cherrypy's default behavior of observing the Accept-Charset header
# is overwritten and forces utf-8 output. Only change this if you know a particular browser
# installation must receive some other character encoding (Latin-1 iso-8859-1, etc)
# WARNING: Change this at your own risk.
tools.encode.encoding = utf-8

# Path to the PID file
# pid_path = var/run/splunk/splunkweb.pid

# Simple XML
simple_xml_module_render = False

[framework]

# Enable Framework by default
django_enable = True
  
# Default framework path
django_path = etc/apps/framework

# Don't force Django to load
django_force_enable = False
